cpu-bind=MASK - bp1-compute091, task  0  0 [1343729]: mask 0x20000020000 set
Traceback (most recent call last):
  File "/user/home/zj22662/photon-net/reup_vary_new.py", line 126, in <module>
    data_prod_iterator(varied_list, global_var_name, is_key, log_file, folder, file_indent, start_idx)
  File "/user/home/zj22662/photon-net/reup_vary_new.py", line 93, in data_prod_iterator
    initial_loss, (n0, key) = loss.loss(
                              ^^^^^^^^^^
  File "/user/home/zj22662/photon-net/p_pack/loss.py", line 39, in loss
    _, binary_predictions_plus, n_p, key = model.predict_reupload(phases, data_set, weights, input_config, key, reupload_freq)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/p_pack/model.py", line 105, in predict_reupload
    _, _, probs, binary_probs_plus, n_p, key = full_unitaries_data_reupload(phases, data_set, weights, input_config, key, reupload_freq)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/p_pack/model.py", line 77, in full_unitaries_data_reupload
    sub_unitaries, label_probs, binary_probs_plus, n_p, key = circ.measurement(unitaries, input_config, key)
                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/p_pack/circ.py", line 447, in measurement
    all_ext, all_p, bin_p = compute_probs_given_survivors(unitaries, surv, k)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/p_pack/circ.py", line 426, in compute_probs_given_survivors
    jax.lax.switch(k, branch_fns, operand=(unitaries, survivors))
  File "/user/home/zj22662/photon-net/p_pack/circ.py", line 341, in branch_fn
    U_trunc    = unitaries[:, :, real_modes]       # (batch, M, kk)
                 ~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/array_methods.py", line 1125, in op
    return getattr(self.aval, f"_{name}")(self, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/array_methods.py", line 660, in _getitem
    return indexing.rewriting_take(self, item)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/indexing.py", line 664, in rewriting_take
    return internal_gather(arr, dynamic_idx)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/indexing.py", line 673, in _gather
    indexer = index_to_gather(np.shape(arr), idx, normalize_indices=normalize_indices)  # shared with _scatter_update
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/indexing.py", line 810, in index_to_gather
    idx = _canonicalize_tuple_index(len(x_shape), idx)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/user/home/zj22662/photon-net/venv2/lib/python3.12/site-packages/jax/_src/numpy/indexing.py", line 1129, in _canonicalize_tuple_index
    raise IndexError(
IndexError: Too many indices: 2-dimensional array indexed with 3 regular indices.
--------------------
For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.
